============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 3444 was started by adrian on adrian,
Thu Jan 21 20:52:52 2021
The command was "mace4 -f selfcountingsentence2.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file selfcountingsentence2.in

assign(domain_size,12).
    % assign(domain_size, 12) -> assign(start_size, 12).
    % assign(domain_size, 12) -> assign(end_size, 12).
assign(max_models,2).
set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.

formulas(utils).
(all x all y (less(x,y) < 2 & greater(x,y) < 2 & equal(x,y) < 2)).
less(x,y) = 1 -> x <= y.
less(x,y) = 0 -> x > y.
greater(x,y) = 1 -> x >= y.
greater(x,y) = 0 -> x < y.
equal(x,y) = 1 -> x = 1 & y = 1.
equal(x,y) = 0 -> x != 1 | y != 1.
f(x,y) = equal(less(c(x),y),greater(c(x),y)).
h(x) = f(0,x) + f(1,x) + f(2,x) + f(3,x) + f(4,x) + f(5,x) + f(6,x) + f(7,x) + f(8,x) + f(9,x).
end_of_list.

formulas(self_counting_sentence).
c(0) = 1 | c(0) = 2 | c(0) = 3.
c(1) != 1.
(all x (x > 1 & x < 10 -> c(x) = 1 | c(x) = 2 | c(x) = 3)).
c(0) = 1 + h(10).
c(1) = 1 + 2 * h(11) + h(1) + h(10).
x > 1 & x < 10 -> c(x) = 1 + h(x).
(all x (x > 9 -> c(x) = 11)).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (less(x,y) < 2 & greater(x,y) < 2 & equal(x,y) < 2)) # label(non_clause).  [assumption].
2 less(x,y) = 1 -> x <= y # label(non_clause).  [assumption].
3 less(x,y) = 0 -> x > y # label(non_clause).  [assumption].
4 greater(x,y) = 1 -> x >= y # label(non_clause).  [assumption].
5 greater(x,y) = 0 -> x < y # label(non_clause).  [assumption].
6 equal(x,y) = 1 -> x = 1 & y = 1 # label(non_clause).  [assumption].
7 equal(x,y) = 0 -> x != 1 | y != 1 # label(non_clause).  [assumption].
8 (all x (x > 1 & x < 10 -> c(x) = 1 | c(x) = 2 | c(x) = 3)) # label(non_clause).  [assumption].
9 x > 1 & x < 10 -> c(x) = 1 + h(x) # label(non_clause).  [assumption].
10 (all x (x > 9 -> c(x) = 11)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
less(x,y) < 2.
greater(x,y) < 2.
equal(x,y) < 2.
less(x,y) != 1 | x <= y.
less(x,y) != 0 | x > y.
greater(x,y) != 1 | x >= y.
greater(x,y) != 0 | x < y.
equal(x,y) != 1 | 1 = x.
equal(x,y) != 1 | 1 = y.
equal(x,y) != 0 | 1 != x | 1 != y.
f(x,y) = equal(less(c(x),y),greater(c(x),y)).
h(x) = f(0,x) + f(1,x) + f(2,x) + f(3,x) + f(4,x) + f(5,x) + f(6,x) + f(7,x) + f(8,x) + f(9,x).
c(0) = 1 | c(0) = 2 | c(0) = 3.
c(1) != 1.
-(x > 1) | -(x < 10) | c(x) = 1 | c(x) = 2 | c(x) = 3.
c(0) = 1 + h(10).
c(1) = 1 + 2 * h(11) + h(1) + h(10).
-(x > 1) | -(x < 10) | c(x) = 1 + h(x).
-(x > 9) | c(x) = 11.
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 11.

============================== DOMAIN SIZE 12 ========================

============================== MODEL =================================

interpretation( 12, [number=1, seconds=4], [

        function(c(_), [ 1, 7, 3, 2, 1, 1, 1, 2, 1, 1,11,11 ]),

        function(h(_), [ 0, 6, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0 ]),

        function(equal(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f(_,_), [
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
			   0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]),

        function(greater(_,_), [
			   1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]),

        function(less(_,_), [
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ])
]).

============================== end of model ==========================

============================== MODEL =================================

interpretation( 12, [number=2, seconds=6], [

        function(c(_), [ 1,11, 2, 1, 1, 1, 1, 1, 1, 1,11,11 ]),

        function(h(_), [ 0, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]),

        function(equal(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f(_,_), [
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
			   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]),

        function(greater(_,_), [
			   1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]),

        function(less(_,_), [
			   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 12.

Current CPU time: 0.00 seconds (total CPU time: 6.55 seconds).
Ground clauses: seen=1636, kept=1163.
Selections=724335, assignments=8687214, propagations=3586589, current_models=2.
Rewrite_terms=39135348, rewrite_bools=13747311, indexes=312.
Rules_from_neg_clauses=0, cross_offs=433.

============================== end of statistics =====================

User_CPU=6.55, System_CPU=0.25, Wall_clock=7.

Exiting with 2 models.

Process 3444 exit (max_models) Thu Jan 21 20:52:59 2021
The process finished Thu Jan 21 20:52:59 2021
