============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 32752 was started by adrian on adrian,
Thu Jan 21 19:03:43 2021
The command was "mace4 -f 4x8.in 5tetros.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file 4x8.in

assign(domain_size,32).
    % assign(domain_size, 32) -> assign(start_size, 32).
    % assign(domain_size, 32) -> assign(end_size, 32).
assign(max_models,3).
set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.

list(distinct).
[a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,0,1,5,6,7,8,14,15,24,27,30,31].
end_of_list.

formulas(utils).
left(x,y) <-> x mod 8 != 7 & y = x + 1.
on(x,y) <-> x < 24 & y = x + 8.
end_of_list.

% Reading from file 5tetros.in


formulas(straight).
i <-> left(a0,a1) & left(a1,a2) & left(a2,a3).
ir <-> on(a0,a1) & on(a1,a2) & on(a2,a3).
i | ir.
i -> -ir.
end_of_list.

formulas(square).
s <-> left(a4,a5) & on(a5,a6) & left(a7,a6).
s.
end_of_list.

formulas(t).
t <-> left(a8,a9) & left(a9,a10) & on(a9,a11).
tr <-> on(a8,a9) & on(a9,a10) & left(a11,a9).
trr <-> left(a9,a8) & left(a10,a9) & on(a11,a9).
trrr <-> on(a9,a8) & on(a10,a9) & left(a9,a11).
t | tr | trr | trrr.
t -> -tr & -trr & -trrr.
tr -> -t & -trr & -trrr.
trr -> -t & -tr & -trrr.
trrr -> -t & -tr & -trr.
end_of_list.

formulas(skew).
k <-> left(a12,a13) & on(a14,a13) & left(a14,a15).
kr <-> on(a12,a13) & left(a13,a14) & on(a14,a15).
krr <-> left(a13,a12) & on(a13,a14) & left(a15,a14).
krrr <-> on(a13,a12) & left(a14,a13) & on(a15,a14).
ku <-> left(a13,a11) & on(a14,a13) & left(a15,a14).
kur <-> on(a13,a12) & left(a13,a14) & on(a15,a14).
kurr <-> left(a12,a13) & on(a13,a14) & left(a14,a15).
kurrr <-> on(a12,a13) & left(a14,a13) & on(a14,a15).
k | kr | krr | krrr | ku | kur | kurr | kurrr.
k -> -kr & -krr & -krrr & -ku & -kur & -kurr & -kurrr.
kr -> -k & -krr & -krrr & -ku & -kur & -kurr & -kurrr.
krr -> -k & -kr & -krrr & -ku & -kur & -kurr & -kurrr.
krrr -> -k & -kr & -krr & -ku & -kur & -kurr & -kurrr.
ku -> -k & -kr & -krr & -krrr & -kur & -kurr & -kurrr.
kur -> -k & -kr & -krr & -krrr & -ku & -kurr & -kurrr.
kurr -> -k & -kr & -krr & -krrr & -ku & -kur & -kurrr.
kurrr -> -k & -kr & -krr & -krrr & -ku & -kur & -kurr.
end_of_list.

formulas(l).
l <-> on(a16,a17) & left(a17,a18) & left(a18,a19).
lr <-> left(a17,a16) & on(a17,a18) & on(a18,a19).
lrr <-> on(a17,a16) & left(a18,a17) & left(a19,a18).
lrrr <-> left(a16,a17) & on(a18,a17) & on(a19,a18).
lu <-> on(a16,a17) & left(a18,a17) & left(a19,a18).
lur <-> left(a17,a16) & on(a18,a17) & on(a19,a18).
lurr <-> on(a17,a16) & left(a17,a18) & left(a18,a19).
lurrr <-> left(a16,a17) & on(a17,a18) & on(a18,a19).
l | lr | lrr | lrrr | lu | lur | lurr | lurrr.
l -> -lr & -lrr & -lrrr & -lu & -lur & -lurr & -lurrr.
lr -> -l & -lrr & -lrrr & -lu & -lur & -lurr & -lurrr.
lrr -> -l & -lr & -lrrr & -lu & -lur & -lurr & -lurrr.
lrrr -> -l & -lr & -lrr & -lu & -lur & -lurr & -lurrr.
lu -> -l & -lr & -lrr & -lrrr & -lur & -lurr & -lurrr.
lur -> -l & -lr & -lrr & -lrrr & -lu & -lurr & -lurrr.
lurr -> -l & -lr & -lrr & -lrrr & -lu & -lur & -lurrr.
lurrr -> -l & -lr & -lrr & -lrrr & -lu & -lur & -lurr.
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 left(x,y) <-> x mod 8 != 7 & y = x + 1 # label(non_clause).  [assumption].
2 on(x,y) <-> x < 24 & y = x + 8 # label(non_clause).  [assumption].
3 i <-> left(a0,a1) & left(a1,a2) & left(a2,a3) # label(non_clause).  [assumption].
4 ir <-> on(a0,a1) & on(a1,a2) & on(a2,a3) # label(non_clause).  [assumption].
5 i -> -ir # label(non_clause).  [assumption].
6 s <-> left(a4,a5) & on(a5,a6) & left(a7,a6) # label(non_clause).  [assumption].
7 t <-> left(a8,a9) & left(a9,a10) & on(a9,a11) # label(non_clause).  [assumption].
8 tr <-> on(a8,a9) & on(a9,a10) & left(a11,a9) # label(non_clause).  [assumption].
9 trr <-> left(a9,a8) & left(a10,a9) & on(a11,a9) # label(non_clause).  [assumption].
10 trrr <-> on(a9,a8) & on(a10,a9) & left(a9,a11) # label(non_clause).  [assumption].
11 t -> -tr & -trr & -trrr # label(non_clause).  [assumption].
12 tr -> -t & -trr & -trrr # label(non_clause).  [assumption].
13 trr -> -t & -tr & -trrr # label(non_clause).  [assumption].
14 trrr -> -t & -tr & -trr # label(non_clause).  [assumption].
15 k <-> left(a12,a13) & on(a14,a13) & left(a14,a15) # label(non_clause).  [assumption].
16 kr <-> on(a12,a13) & left(a13,a14) & on(a14,a15) # label(non_clause).  [assumption].
17 krr <-> left(a13,a12) & on(a13,a14) & left(a15,a14) # label(non_clause).  [assumption].
18 krrr <-> on(a13,a12) & left(a14,a13) & on(a15,a14) # label(non_clause).  [assumption].
19 ku <-> left(a13,a11) & on(a14,a13) & left(a15,a14) # label(non_clause).  [assumption].
20 kur <-> on(a13,a12) & left(a13,a14) & on(a15,a14) # label(non_clause).  [assumption].
21 kurr <-> left(a12,a13) & on(a13,a14) & left(a14,a15) # label(non_clause).  [assumption].
22 kurrr <-> on(a12,a13) & left(a14,a13) & on(a14,a15) # label(non_clause).  [assumption].
23 k -> -kr & -krr & -krrr & -ku & -kur & -kurr & -kurrr # label(non_clause).  [assumption].
24 kr -> -k & -krr & -krrr & -ku & -kur & -kurr & -kurrr # label(non_clause).  [assumption].
25 krr -> -k & -kr & -krrr & -ku & -kur & -kurr & -kurrr # label(non_clause).  [assumption].
26 krrr -> -k & -kr & -krr & -ku & -kur & -kurr & -kurrr # label(non_clause).  [assumption].
27 ku -> -k & -kr & -krr & -krrr & -kur & -kurr & -kurrr # label(non_clause).  [assumption].
28 kur -> -k & -kr & -krr & -krrr & -ku & -kurr & -kurrr # label(non_clause).  [assumption].
29 kurr -> -k & -kr & -krr & -krrr & -ku & -kur & -kurrr # label(non_clause).  [assumption].
30 kurrr -> -k & -kr & -krr & -krrr & -ku & -kur & -kurr # label(non_clause).  [assumption].
31 l <-> on(a16,a17) & left(a17,a18) & left(a18,a19) # label(non_clause).  [assumption].
32 lr <-> left(a17,a16) & on(a17,a18) & on(a18,a19) # label(non_clause).  [assumption].
33 lrr <-> on(a17,a16) & left(a18,a17) & left(a19,a18) # label(non_clause).  [assumption].
34 lrrr <-> left(a16,a17) & on(a18,a17) & on(a19,a18) # label(non_clause).  [assumption].
35 lu <-> on(a16,a17) & left(a18,a17) & left(a19,a18) # label(non_clause).  [assumption].
36 lur <-> left(a17,a16) & on(a18,a17) & on(a19,a18) # label(non_clause).  [assumption].
37 lurr <-> on(a17,a16) & left(a17,a18) & left(a18,a19) # label(non_clause).  [assumption].
38 lurrr <-> left(a16,a17) & on(a17,a18) & on(a18,a19) # label(non_clause).  [assumption].
39 l -> -lr & -lrr & -lrrr & -lu & -lur & -lurr & -lurrr # label(non_clause).  [assumption].
40 lr -> -l & -lrr & -lrrr & -lu & -lur & -lurr & -lurrr # label(non_clause).  [assumption].
41 lrr -> -l & -lr & -lrrr & -lu & -lur & -lurr & -lurrr # label(non_clause).  [assumption].
42 lrrr -> -l & -lr & -lrr & -lu & -lur & -lurr & -lurrr # label(non_clause).  [assumption].
43 lu -> -l & -lr & -lrr & -lrrr & -lur & -lurr & -lurrr # label(non_clause).  [assumption].
44 lur -> -l & -lr & -lrr & -lrrr & -lu & -lurr & -lurrr # label(non_clause).  [assumption].
45 lurr -> -l & -lr & -lrr & -lrrr & -lu & -lur & -lurrr # label(non_clause).  [assumption].
46 lurrr -> -l & -lr & -lrr & -lrrr & -lu & -lur & -lurr # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-left(x,y) | x mod 8 != 7.
-left(x,y) | x + 1 = y.
left(x,y) | x mod 8 = 7 | x + 1 != y.
-on(x,y) | x < 24.
-on(x,y) | x + 8 = y.
on(x,y) | -(x < 24) | x + 8 != y.
-i | left(a0,a1).
-i | left(a1,a2).
-i | left(a2,a3).
i | -left(a0,a1) | -left(a1,a2) | -left(a2,a3).
-ir | on(a0,a1).
-ir | on(a1,a2).
-ir | on(a2,a3).
ir | -on(a0,a1) | -on(a1,a2) | -on(a2,a3).
i | ir.
-i | -ir.
-s | left(a4,a5).
-s | on(a5,a6).
-s | left(a7,a6).
s | -left(a4,a5) | -on(a5,a6) | -left(a7,a6).
s.
-t | left(a8,a9).
-t | left(a9,a10).
-t | on(a9,a11).
t | -left(a8,a9) | -left(a9,a10) | -on(a9,a11).
-tr | on(a8,a9).
-tr | on(a9,a10).
-tr | left(a11,a9).
tr | -on(a8,a9) | -on(a9,a10) | -left(a11,a9).
-trr | left(a9,a8).
-trr | left(a10,a9).
-trr | on(a11,a9).
trr | -left(a9,a8) | -left(a10,a9) | -on(a11,a9).
-trrr | on(a9,a8).
-trrr | on(a10,a9).
-trrr | left(a9,a11).
trrr | -on(a9,a8) | -on(a10,a9) | -left(a9,a11).
t | tr | trr | trrr.
-t | -tr.
-t | -trr.
-t | -trrr.
-tr | -t.
-tr | -trr.
-tr | -trrr.
-trr | -t.
-trr | -tr.
-trr | -trrr.
-trrr | -t.
-trrr | -tr.
-trrr | -trr.
-k | left(a12,a13).
-k | on(a14,a13).
-k | left(a14,a15).
k | -left(a12,a13) | -on(a14,a13) | -left(a14,a15).
-kr | on(a12,a13).
-kr | left(a13,a14).
-kr | on(a14,a15).
kr | -on(a12,a13) | -left(a13,a14) | -on(a14,a15).
-krr | left(a13,a12).
-krr | on(a13,a14).
-krr | left(a15,a14).
krr | -left(a13,a12) | -on(a13,a14) | -left(a15,a14).
-krrr | on(a13,a12).
-krrr | left(a14,a13).
-krrr | on(a15,a14).
krrr | -on(a13,a12) | -left(a14,a13) | -on(a15,a14).
-ku | left(a13,a11).
-ku | on(a14,a13).
-ku | left(a15,a14).
ku | -left(a13,a11) | -on(a14,a13) | -left(a15,a14).
-kur | on(a13,a12).
-kur | left(a13,a14).
-kur | on(a15,a14).
kur | -on(a13,a12) | -left(a13,a14) | -on(a15,a14).
-kurr | left(a12,a13).
-kurr | on(a13,a14).
-kurr | left(a14,a15).
kurr | -left(a12,a13) | -on(a13,a14) | -left(a14,a15).
-kurrr | on(a12,a13).
-kurrr | left(a14,a13).
-kurrr | on(a14,a15).
kurrr | -on(a12,a13) | -left(a14,a13) | -on(a14,a15).
k | kr | krr | krrr | ku | kur | kurr | kurrr.
-k | -kr.
-k | -krr.
-k | -krrr.
-k | -ku.
-k | -kur.
-k | -kurr.
-k | -kurrr.
-kr | -k.
-kr | -krr.
-kr | -krrr.
-kr | -ku.
-kr | -kur.
-kr | -kurr.
-kr | -kurrr.
-krr | -k.
-krr | -kr.
-krr | -krrr.
-krr | -ku.
-krr | -kur.
-krr | -kurr.
-krr | -kurrr.
-krrr | -k.
-krrr | -kr.
-krrr | -krr.
-krrr | -ku.
-krrr | -kur.
-krrr | -kurr.
-krrr | -kurrr.
-ku | -k.
-ku | -kr.
-ku | -krr.
-ku | -krrr.
-ku | -kur.
-ku | -kurr.
-ku | -kurrr.
-kur | -k.
-kur | -kr.
-kur | -krr.
-kur | -krrr.
-kur | -ku.
-kur | -kurr.
-kur | -kurrr.
-kurr | -k.
-kurr | -kr.
-kurr | -krr.
-kurr | -krrr.
-kurr | -ku.
-kurr | -kur.
-kurr | -kurrr.
-kurrr | -k.
-kurrr | -kr.
-kurrr | -krr.
-kurrr | -krrr.
-kurrr | -ku.
-kurrr | -kur.
-kurrr | -kurr.
-l | on(a16,a17).
-l | left(a17,a18).
-l | left(a18,a19).
l | -on(a16,a17) | -left(a17,a18) | -left(a18,a19).
-lr | left(a17,a16).
-lr | on(a17,a18).
-lr | on(a18,a19).
lr | -left(a17,a16) | -on(a17,a18) | -on(a18,a19).
-lrr | on(a17,a16).
-lrr | left(a18,a17).
-lrr | left(a19,a18).
lrr | -on(a17,a16) | -left(a18,a17) | -left(a19,a18).
-lrrr | left(a16,a17).
-lrrr | on(a18,a17).
-lrrr | on(a19,a18).
lrrr | -left(a16,a17) | -on(a18,a17) | -on(a19,a18).
-lu | on(a16,a17).
-lu | left(a18,a17).
-lu | left(a19,a18).
lu | -on(a16,a17) | -left(a18,a17) | -left(a19,a18).
-lur | left(a17,a16).
-lur | on(a18,a17).
-lur | on(a19,a18).
lur | -left(a17,a16) | -on(a18,a17) | -on(a19,a18).
-lurr | on(a17,a16).
-lurr | left(a17,a18).
-lurr | left(a18,a19).
lurr | -on(a17,a16) | -left(a17,a18) | -left(a18,a19).
-lurrr | left(a16,a17).
-lurrr | on(a17,a18).
-lurrr | on(a18,a19).
lurrr | -left(a16,a17) | -on(a17,a18) | -on(a18,a19).
l | lr | lrr | lrrr | lu | lur | lurr | lurrr.
-l | -lr.
-l | -lrr.
-l | -lrrr.
-l | -lu.
-l | -lur.
-l | -lurr.
-l | -lurrr.
-lr | -l.
-lr | -lrr.
-lr | -lrrr.
-lr | -lu.
-lr | -lur.
-lr | -lurr.
-lr | -lurrr.
-lrr | -l.
-lrr | -lr.
-lrr | -lrrr.
-lrr | -lu.
-lrr | -lur.
-lrr | -lurr.
-lrr | -lurrr.
-lrrr | -l.
-lrrr | -lr.
-lrrr | -lrr.
-lrrr | -lu.
-lrrr | -lur.
-lrrr | -lurr.
-lrrr | -lurrr.
-lu | -l.
-lu | -lr.
-lu | -lrr.
-lu | -lrrr.
-lu | -lur.
-lu | -lurr.
-lu | -lurrr.
-lur | -l.
-lur | -lr.
-lur | -lrr.
-lur | -lrrr.
-lur | -lu.
-lur | -lurr.
-lur | -lurrr.
-lurr | -l.
-lurr | -lr.
-lurr | -lrr.
-lurr | -lrrr.
-lurr | -lu.
-lurr | -lur.
-lurr | -lurrr.
-lurrr | -l.
-lurrr | -lr.
-lurrr | -lrr.
-lurrr | -lrrr.
-lurrr | -lu.
-lurrr | -lur.
-lurrr | -lurr.
a0 != a1.
a0 != a2.
a0 != a3.
a0 != a4.
a0 != a5.
a0 != a6.
a0 != a7.
a0 != a8.
a0 != a9.
a0 != a10.
a0 != a11.
a0 != a12.
a0 != a13.
a0 != a14.
a0 != a15.
a0 != a16.
a0 != a17.
a0 != a18.
a0 != a19.
a0 != 0.
a0 != 1.
a0 != 5.
a0 != 6.
a0 != 7.
a0 != 8.
a0 != 14.
a0 != 15.
a0 != 24.
a0 != 27.
a0 != 30.
a0 != 31.
a1 != a2.
a1 != a3.
a1 != a4.
a1 != a5.
a1 != a6.
a1 != a7.
a1 != a8.
a1 != a9.
a1 != a10.
a1 != a11.
a1 != a12.
a1 != a13.
a1 != a14.
a1 != a15.
a1 != a16.
a1 != a17.
a1 != a18.
a1 != a19.
a1 != 0.
a1 != 1.
a1 != 5.
a1 != 6.
a1 != 7.
a1 != 8.
a1 != 14.
a1 != 15.
a1 != 24.
a1 != 27.
a1 != 30.
a1 != 31.
a2 != a3.
a2 != a4.
a2 != a5.
a2 != a6.
a2 != a7.
a2 != a8.
a2 != a9.
a2 != a10.
a2 != a11.
a2 != a12.
a2 != a13.
a2 != a14.
a2 != a15.
a2 != a16.
a2 != a17.
a2 != a18.
a2 != a19.
a2 != 0.
a2 != 1.
a2 != 5.
a2 != 6.
a2 != 7.
a2 != 8.
a2 != 14.
a2 != 15.
a2 != 24.
a2 != 27.
a2 != 30.
a2 != 31.
a3 != a4.
a3 != a5.
a3 != a6.
a3 != a7.
a3 != a8.
a3 != a9.
a3 != a10.
a3 != a11.
a3 != a12.
a3 != a13.
a3 != a14.
a3 != a15.
a3 != a16.
a3 != a17.
a3 != a18.
a3 != a19.
a3 != 0.
a3 != 1.
a3 != 5.
a3 != 6.
a3 != 7.
a3 != 8.
a3 != 14.
a3 != 15.
a3 != 24.
a3 != 27.
a3 != 30.
a3 != 31.
a4 != a5.
a4 != a6.
a4 != a7.
a4 != a8.
a4 != a9.
a4 != a10.
a4 != a11.
a4 != a12.
a4 != a13.
a4 != a14.
a4 != a15.
a4 != a16.
a4 != a17.
a4 != a18.
a4 != a19.
a4 != 0.
a4 != 1.
a4 != 5.
a4 != 6.
a4 != 7.
a4 != 8.
a4 != 14.
a4 != 15.
a4 != 24.
a4 != 27.
a4 != 30.
a4 != 31.
a5 != a6.
a5 != a7.
a5 != a8.
a5 != a9.
a5 != a10.
a5 != a11.
a5 != a12.
a5 != a13.
a5 != a14.
a5 != a15.
a5 != a16.
a5 != a17.
a5 != a18.
a5 != a19.
a5 != 0.
a5 != 1.
a5 != 5.
a5 != 6.
a5 != 7.
a5 != 8.
a5 != 14.
a5 != 15.
a5 != 24.
a5 != 27.
a5 != 30.
a5 != 31.
a6 != a7.
a6 != a8.
a6 != a9.
a6 != a10.
a6 != a11.
a6 != a12.
a6 != a13.
a6 != a14.
a6 != a15.
a6 != a16.
a6 != a17.
a6 != a18.
a6 != a19.
a6 != 0.
a6 != 1.
a6 != 5.
a6 != 6.
a6 != 7.
a6 != 8.
a6 != 14.
a6 != 15.
a6 != 24.
a6 != 27.
a6 != 30.
a6 != 31.
a7 != a8.
a7 != a9.
a7 != a10.
a7 != a11.
a7 != a12.
a7 != a13.
a7 != a14.
a7 != a15.
a7 != a16.
a7 != a17.
a7 != a18.
a7 != a19.
a7 != 0.
a7 != 1.
a7 != 5.
a7 != 6.
a7 != 7.
a7 != 8.
a7 != 14.
a7 != 15.
a7 != 24.
a7 != 27.
a7 != 30.
a7 != 31.
a8 != a9.
a8 != a10.
a8 != a11.
a8 != a12.
a8 != a13.
a8 != a14.
a8 != a15.
a8 != a16.
a8 != a17.
a8 != a18.
a8 != a19.
a8 != 0.
a8 != 1.
a8 != 5.
a8 != 6.
a8 != 7.
a8 != 8.
a8 != 14.
a8 != 15.
a8 != 24.
a8 != 27.
a8 != 30.
a8 != 31.
a9 != a10.
a9 != a11.
a9 != a12.
a9 != a13.
a9 != a14.
a9 != a15.
a9 != a16.
a9 != a17.
a9 != a18.
a9 != a19.
a9 != 0.
a9 != 1.
a9 != 5.
a9 != 6.
a9 != 7.
a9 != 8.
a9 != 14.
a9 != 15.
a9 != 24.
a9 != 27.
a9 != 30.
a9 != 31.
a10 != a11.
a10 != a12.
a10 != a13.
a10 != a14.
a10 != a15.
a10 != a16.
a10 != a17.
a10 != a18.
a10 != a19.
a10 != 0.
a10 != 1.
a10 != 5.
a10 != 6.
a10 != 7.
a10 != 8.
a10 != 14.
a10 != 15.
a10 != 24.
a10 != 27.
a10 != 30.
a10 != 31.
a11 != a12.
a11 != a13.
a11 != a14.
a11 != a15.
a11 != a16.
a11 != a17.
a11 != a18.
a11 != a19.
a11 != 0.
a11 != 1.
a11 != 5.
a11 != 6.
a11 != 7.
a11 != 8.
a11 != 14.
a11 != 15.
a11 != 24.
a11 != 27.
a11 != 30.
a11 != 31.
a12 != a13.
a12 != a14.
a12 != a15.
a12 != a16.
a12 != a17.
a12 != a18.
a12 != a19.
a12 != 0.
a12 != 1.
a12 != 5.
a12 != 6.
a12 != 7.
a12 != 8.
a12 != 14.
a12 != 15.
a12 != 24.
a12 != 27.
a12 != 30.
a12 != 31.
a13 != a14.
a13 != a15.
a13 != a16.
a13 != a17.
a13 != a18.
a13 != a19.
a13 != 0.
a13 != 1.
a13 != 5.
a13 != 6.
a13 != 7.
a13 != 8.
a13 != 14.
a13 != 15.
a13 != 24.
a13 != 27.
a13 != 30.
a13 != 31.
a14 != a15.
a14 != a16.
a14 != a17.
a14 != a18.
a14 != a19.
a14 != 0.
a14 != 1.
a14 != 5.
a14 != 6.
a14 != 7.
a14 != 8.
a14 != 14.
a14 != 15.
a14 != 24.
a14 != 27.
a14 != 30.
a14 != 31.
a15 != a16.
a15 != a17.
a15 != a18.
a15 != a19.
a15 != 0.
a15 != 1.
a15 != 5.
a15 != 6.
a15 != 7.
a15 != 8.
a15 != 14.
a15 != 15.
a15 != 24.
a15 != 27.
a15 != 30.
a15 != 31.
a16 != a17.
a16 != a18.
a16 != a19.
a16 != 0.
a16 != 1.
a16 != 5.
a16 != 6.
a16 != 7.
a16 != 8.
a16 != 14.
a16 != 15.
a16 != 24.
a16 != 27.
a16 != 30.
a16 != 31.
a17 != a18.
a17 != a19.
a17 != 0.
a17 != 1.
a17 != 5.
a17 != 6.
a17 != 7.
a17 != 8.
a17 != 14.
a17 != 15.
a17 != 24.
a17 != 27.
a17 != 30.
a17 != 31.
a18 != a19.
a18 != 0.
a18 != 1.
a18 != 5.
a18 != 6.
a18 != 7.
a18 != 8.
a18 != 14.
a18 != 15.
a18 != 24.
a18 != 27.
a18 != 30.
a18 != 31.
a19 != 0.
a19 != 1.
a19 != 5.
a19 != 6.
a19 != 7.
a19 != 8.
a19 != 14.
a19 != 15.
a19 != 24.
a19 != 27.
a19 != 30.
a19 != 31.
0 != 1.
0 != 5.
0 != 6.
0 != 7.
0 != 8.
0 != 14.
0 != 15.
0 != 24.
0 != 27.
0 != 30.
0 != 31.
1 != 5.
1 != 6.
1 != 7.
1 != 8.
1 != 14.
1 != 15.
1 != 24.
1 != 27.
1 != 30.
1 != 31.
5 != 6.
5 != 7.
5 != 8.
5 != 14.
5 != 15.
5 != 24.
5 != 27.
5 != 30.
5 != 31.
6 != 7.
6 != 8.
6 != 14.
6 != 15.
6 != 24.
6 != 27.
6 != 30.
6 != 31.
7 != 8.
7 != 14.
7 != 15.
7 != 24.
7 != 27.
7 != 30.
7 != 31.
8 != 14.
8 != 15.
8 != 24.
8 != 27.
8 != 30.
8 != 31.
14 != 15.
14 != 24.
14 != 27.
14 != 30.
14 != 31.
15 != 24.
15 != 27.
15 != 30.
15 != 31.
24 != 27.
24 != 30.
24 != 31.
27 != 30.
27 != 31.
30 != 31.
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 31.

============================== DOMAIN SIZE 32 ========================

============================== MODEL =================================

interpretation( 32, [number=1, seconds=6], [

        function(a0, [ 2 ]),

        function(a1, [10 ]),

        function(a10, [25 ]),

        function(a11, [16 ]),

        function(a12, [19 ]),

        function(a13, [20 ]),

        function(a14, [28 ]),

        function(a15, [29 ]),

        function(a16, [13 ]),

        function(a17, [21 ]),

        function(a18, [22 ]),

        function(a19, [23 ]),

        function(a2, [18 ]),

        function(a3, [26 ]),

        function(a4, [ 3 ]),

        function(a5, [ 4 ]),

        function(a6, [12 ]),

        function(a7, [11 ]),

        function(a8, [ 9 ]),

        function(a9, [17 ]),

        relation(i, [ 0 ]),

        relation(ir, [ 1 ]),

        relation(k, [ 0 ]),

        relation(kr, [ 0 ]),

        relation(krr, [ 0 ]),

        relation(krrr, [ 0 ]),

        relation(ku, [ 0 ]),

        relation(kur, [ 0 ]),

        relation(kurr, [ 1 ]),

        relation(kurrr, [ 0 ]),

        relation(l, [ 1 ]),

        relation(lr, [ 0 ]),

        relation(lrr, [ 0 ]),

        relation(lrrr, [ 0 ]),

        relation(lu, [ 0 ]),

        relation(lur, [ 0 ]),

        relation(lurr, [ 0 ]),

        relation(lurrr, [ 0 ]),

        relation(s, [ 1 ]),

        relation(t, [ 0 ]),

        relation(tr, [ 1 ]),

        relation(trr, [ 0 ]),

        relation(trrr, [ 0 ]),

        relation(left(_,_), [
			   0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        relation(on(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 32.

Current CPU time: 0.00 seconds (total CPU time: 61.05 seconds).
Ground clauses: seen=6862, kept=2700.
Selections=649842, assignments=20794944, propagations=25147001, current_models=1.
Rewrite_terms=565783267, rewrite_bools=576263519, indexes=0.
Rules_from_neg_clauses=537300, cross_offs=49937326.

============================== end of statistics =====================

User_CPU=61.05, System_CPU=0.61, Wall_clock=62.

Exiting with 1 model.

Process 32752 exit (all_models) Thu Jan 21 19:04:45 2021
The process finished Thu Jan 21 19:04:45 2021
