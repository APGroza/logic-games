============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 20142 was started by adrian on adrian,
Thu Jan 21 08:54:01 2021
The command was "mace4 -f stars_arrows2.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file stars_arrows2.in

set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.
assign(domain_size,9).
    % assign(domain_size, 9) -> assign(start_size, 9).
    % assign(domain_size, 9) -> assign(end_size, 9).
assign(max_models,1).

formulas(stars_and_arrows).
(all x all y (x < 5 & y < 5 -> f(x,y) < 2 & f(x,0) + f(x,1) + f(x,2) + f(x,3) + f(x,4) = f(x,5) & f(0,y) + f(1,y) + f(2,y) + f(3,y) + f(4,y) = f(5,y))).
(all x all y (x > 5 | y > 5 -> f(x,y) = 0)).
f(5,5) = 0.
NA = 0.
L = 1.
R = 2.
U = 3.
D = 4.
DL = 5.
DR = 6.
UL = 7.
UR = 8.
(all x all y (x > 4 | y > 4 -> g(x,y) = 0)).
(all x all y (x <= 4 & y <= 4 & g(x,y) != 0 -> f(x,y) = 0)).
g(x,y) = R -> (exists z (z > y & f(x,z) = 1)).
g(x,y) = L -> (exists z (z < y & f(x,z) = 1)).
g(x,y) = U -> (exists z (z < x & f(z,y) = 1)).
g(x,y) = D -> (exists z (z > x & f(z,y) = 1)).
g(x,y) = DR -> (exists x1 exists y1 (x1 > x & y1 > y & x1 + -x = y1 + -y & f(x1,y1) = 1)).
g(x,y) = DL -> (exists x1 exists y1 (x1 > x & y1 < y & x1 + -x = y + -y1 & f(x1,y1) = 1)).
(all x all y (x > 0 & y < 4 & g(x,y) = UR -> (exists x1 exists y1 (x1 < x & y1 > y & x + -x1 = y1 + -y & f(x1,y1) = 1)))).
(all x all y (x > 0 & y > 4 & g(x,y) = UL -> (exists x1 exists y1 (x1 < x & y1 < y & x + -x1 = y1 + -y & f(x1,y1) = 1)))).
end_of_list.

formulas(sample_puzzle).
f(0,5) = 2 & f(1,5) = 2 & f(2,5) = 3 & f(3,5) = 0 & f(4,5) = 1.
f(5,0) = 1 & f(5,1) = 2 & f(5,2) = 3 & f(5,3) = 2 & f(5,4) = 0.
g(0,0) = DR.
g(0,1) = NA.
g(0,2) = DL.
g(0,3) = NA.
g(0,4) = NA.
g(1,0) = NA.
g(1,1) = R.
g(1,2) = NA.
g(1,3) = NA.
g(1,4) = UL.
g(2,0) = NA.
g(2,1) = NA.
g(2,2) = NA.
g(2,3) = NA.
g(2,4) = NA.
g(3,0) = NA.
g(3,1) = U.
g(3,2) = NA.
g(3,3) = NA.
g(3,4) = NA.
g(4,0) = UR.
g(4,1) = NA.
g(4,2) = NA.
g(4,3) = UL.
g(4,4) = L.
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (x < 5 & y < 5 -> f(x,y) < 2 & f(x,0) + f(x,1) + f(x,2) + f(x,3) + f(x,4) = f(x,5) & f(0,y) + f(1,y) + f(2,y) + f(3,y) + f(4,y) = f(5,y))) # label(non_clause).  [assumption].
2 (all x all y (x > 5 | y > 5 -> f(x,y) = 0)) # label(non_clause).  [assumption].
3 (all x all y (x > 4 | y > 4 -> g(x,y) = 0)) # label(non_clause).  [assumption].
4 (all x all y (x <= 4 & y <= 4 & g(x,y) != 0 -> f(x,y) = 0)) # label(non_clause).  [assumption].
5 g(x,y) = R -> (exists z (z > y & f(x,z) = 1)) # label(non_clause).  [assumption].
6 g(x,y) = L -> (exists z (z < y & f(x,z) = 1)) # label(non_clause).  [assumption].
7 g(x,y) = U -> (exists z (z < x & f(z,y) = 1)) # label(non_clause).  [assumption].
8 g(x,y) = D -> (exists z (z > x & f(z,y) = 1)) # label(non_clause).  [assumption].
9 g(x,y) = DR -> (exists x1 exists y1 (x1 > x & y1 > y & x1 + -x = y1 + -y & f(x1,y1) = 1)) # label(non_clause).  [assumption].
10 g(x,y) = DL -> (exists x1 exists y1 (x1 > x & y1 < y & x1 + -x = y + -y1 & f(x1,y1) = 1)) # label(non_clause).  [assumption].
11 (all x all y (x > 0 & y < 4 & g(x,y) = UR -> (exists x1 exists y1 (x1 < x & y1 > y & x + -x1 = y1 + -y & f(x1,y1) = 1)))) # label(non_clause).  [assumption].
12 (all x all y (x > 0 & y > 4 & g(x,y) = UL -> (exists x1 exists y1 (x1 < x & y1 < y & x + -x1 = y1 + -y & f(x1,y1) = 1)))) # label(non_clause).  [assumption].
13 f(0,5) = 2 & f(1,5) = 2 & f(2,5) = 3 & f(3,5) = 0 & f(4,5) = 1 # label(non_clause).  [assumption].
14 f(5,0) = 1 & f(5,1) = 2 & f(5,2) = 3 & f(5,3) = 2 & f(5,4) = 0 # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-(x < 5) | -(y < 5) | f(x,y) < 2.
-(x < 5) | -(y < 5) | f(x,5) = f(x,0) + f(x,1) + f(x,2) + f(x,3) + f(x,4).
-(x < 5) | -(y < 5) | f(5,y) = f(0,y) + f(1,y) + f(2,y) + f(3,y) + f(4,y).
-(x > 5) | f(x,y) = 0.
-(x > 5) | f(y,x) = 0.
f(5,5) = 0.
NA = 0.
L = 1.
R = 2.
U = 3.
D = 4.
DL = 5.
DR = 6.
UL = 7.
UR = 8.
-(x > 4) | g(x,y) = 0.
-(x > 4) | g(y,x) = 0.
-(x <= 4) | -(y <= 4) | g(x,y) = 0 | f(x,y) = 0.
g(x,y) != R | f1(y,x) > y.
g(x,y) != R | f(x,f1(y,x)) = 1.
g(x,y) != L | f2(y,x) < y.
g(x,y) != L | f(x,f2(y,x)) = 1.
g(x,y) != U | f3(x,y) < x.
g(x,y) != U | f(f3(x,y),y) = 1.
g(x,y) != D | f4(x,y) > x.
g(x,y) != D | f(f4(x,y),y) = 1.
g(x,y) != DR | f5(x,y) > x.
g(x,y) != DR | f6(x,y) > y.
g(x,y) != DR | f6(x,y) + -y = f5(x,y) + -x.
g(x,y) != DR | f(f5(x,y),f6(x,y)) = 1.
g(x,y) != DL | f7(x,y) > x.
g(x,y) != DL | f8(x,y) < y.
g(x,y) != DL | f7(x,y) + -x = y + -f8(x,y).
g(x,y) != DL | f(f7(x,y),f8(x,y)) = 1.
-(x > 0) | -(y < 4) | g(x,y) != UR | f9(x,y) < x.
-(x > 0) | -(y < 4) | g(x,y) != UR | f10(x,y) > y.
-(x > 0) | -(y < 4) | g(x,y) != UR | f10(x,y) + -y = x + -f9(x,y).
-(x > 0) | -(y < 4) | g(x,y) != UR | f(f9(x,y),f10(x,y)) = 1.
-(x > 0) | -(y > 4) | g(x,y) != UL | f11(x,y) < x.
-(x > 0) | -(y > 4) | g(x,y) != UL | f12(x,y) < y.
-(x > 0) | -(y > 4) | g(x,y) != UL | f12(x,y) + -y = x + -f11(x,y).
-(x > 0) | -(y > 4) | g(x,y) != UL | f(f11(x,y),f12(x,y)) = 1.
f(0,5) = 2.
f(1,5) = 2.
f(2,5) = 3.
f(3,5) = 0.
f(4,5) = 1.
f(5,0) = 1.
f(5,1) = 2.
f(5,2) = 3.
f(5,3) = 2.
f(5,4) = 0.
g(0,0) = DR.
g(0,1) = NA.
g(0,2) = DL.
g(0,3) = NA.
g(0,4) = NA.
g(1,0) = NA.
g(1,1) = R.
g(1,2) = NA.
g(1,3) = NA.
g(1,4) = UL.
g(2,0) = NA.
g(2,1) = NA.
g(2,2) = NA.
g(2,3) = NA.
g(2,4) = NA.
g(3,0) = NA.
g(3,1) = U.
g(3,2) = NA.
g(3,3) = NA.
g(3,4) = NA.
g(4,0) = UR.
g(4,1) = NA.
g(4,2) = NA.
g(4,3) = UL.
g(4,4) = L.
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 8.

============================== DOMAIN SIZE 9 =========================

============================== MODEL =================================

interpretation( 9, [number=1, seconds=0], [

        function(D, [ 4 ]),

        function(DL, [ 5 ]),

        function(DR, [ 6 ]),

        function(L, [ 1 ]),

        function(NA, [ 0 ]),

        function(R, [ 2 ]),

        function(U, [ 3 ]),

        function(UL, [ 7 ]),

        function(UR, [ 8 ]),

        function(f(_,_), [
			   0, 1, 0, 1, 0, 2, 0, 0, 0,
			   0, 0, 1, 1, 0, 2, 0, 0, 0,
			   1, 1, 1, 0, 0, 3, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 1, 0, 0, 0,
			   1, 2, 3, 2, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(g(_,_), [
			   6, 0, 5, 0, 0, 0, 0, 0, 0,
			   0, 2, 0, 0, 7, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 3, 0, 0, 0, 0, 0, 0, 0,
			   8, 0, 0, 7, 1, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f1(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 2, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f2(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 2, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f3(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f4(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f5(_,_), [
			   2, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f6(_,_), [
			   2, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f7(_,_), [
			   0, 0, 2, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f8(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f9(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f10(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   3, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f11(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ]),

        function(f12(_,_), [
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 9.

Current CPU time: 0.00 seconds (total CPU time: 0.05 seconds).
Ground clauses: seen=2637, kept=710.
Selections=1397, assignments=4704, propagations=161, current_models=1.
Rewrite_terms=25502, rewrite_bools=5570, indexes=7.
Rules_from_neg_clauses=0, cross_offs=58.

============================== end of statistics =====================

User_CPU=0.05, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 20142 exit (max_models) Thu Jan 21 08:54:01 2021
The process finished Thu Jan 21 08:54:01 2021
