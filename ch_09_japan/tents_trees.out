============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 20454 was started by adrian on adrian,
Thu Jan 21 09:04:56 2021
The command was "mace4 -f tents_trees.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file tents_trees.in

set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.
assign(domain_size,6).
    % assign(domain_size, 6) -> assign(start_size, 6).
    % assign(domain_size, 6) -> assign(end_size, 6).
assign(max_models,-1).

formulas(utils).
ds1 = domain_size + -1.
ds2 = ds1 + -1.
x < ds2 -> s(x) = x + 1.
s(ds2) = p(ds2).
s(ds1) = ds1.
x > 0 -> p(x) = x + -1.
p(0) = s(0).
end_of_list.

formulas(tents_and_trees).
(all x all y (x < ds1 & y < ds1 -> f(x,y) < 2 & f(x,0) + f(x,1) + f(x,2) + f(x,3) + f(x,4) = f(x,ds1) & f(0,y) + f(1,y) + f(2,y) + f(3,y) + f(4,y) = f(ds1,y))).
f(ds1,ds1) = 0.
t(x,y) -> f(x,y) = 0.
(all x all y (x < ds1 & y < ds1 & f(x,y) = 1 -> f(x,s(y)) = 0 & f(x,p(y)) = 0 & f(s(x),y) = 0 & f(p(x),y) = 0 & f(p(x),p(y)) = 0 & f(p(x),s(y)) = 0 & f(s(x),p(y)) = 0 & f(s(x),s(y)) = 0)).
end_of_list.

formulas(trees_map).
(all y (-t(0,y) & -t(2,y) & -t(ds1,y))).
(all x -t(x,ds1)).
t(1,0) & -t(1,1) & t(1,2) & t(1,3) & t(1,4).
-t(3,0) & t(3,1) & -t(3,2) & -t(3,3) & -t(3,4).
t(4,0) & -t(4,1) & -t(4,2) & t(4,3) & -t(4,4).
end_of_list.

formulas(sample_puzzle).
f(0,ds1) = 3 & f(1,ds1) = 0 & f(2,ds1) = 2 & f(3,ds1) = 0 & f(4,ds1) = 2.
f(ds1,0) = 1 & f(ds1,1) = 2 & f(ds1,2) = 1 & f(ds1,3) = 1 & f(ds1,4) = 2.
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 x < ds2 -> s(x) = x + 1 # label(non_clause).  [assumption].
2 x > 0 -> p(x) = x + -1 # label(non_clause).  [assumption].
3 (all x all y (x < ds1 & y < ds1 -> f(x,y) < 2 & f(x,0) + f(x,1) + f(x,2) + f(x,3) + f(x,4) = f(x,ds1) & f(0,y) + f(1,y) + f(2,y) + f(3,y) + f(4,y) = f(ds1,y))) # label(non_clause).  [assumption].
4 t(x,y) -> f(x,y) = 0 # label(non_clause).  [assumption].
5 (all x all y (x < ds1 & y < ds1 & f(x,y) = 1 -> f(x,s(y)) = 0 & f(x,p(y)) = 0 & f(s(x),y) = 0 & f(p(x),y) = 0 & f(p(x),p(y)) = 0 & f(p(x),s(y)) = 0 & f(s(x),p(y)) = 0 & f(s(x),s(y)) = 0)) # label(non_clause).  [assumption].
6 (all y (-t(0,y) & -t(2,y) & -t(ds1,y))) # label(non_clause).  [assumption].
7 (all x -t(x,ds1)) # label(non_clause).  [assumption].
8 t(1,0) & -t(1,1) & t(1,2) & t(1,3) & t(1,4) # label(non_clause).  [assumption].
9 -t(3,0) & t(3,1) & -t(3,2) & -t(3,3) & -t(3,4) # label(non_clause).  [assumption].
10 t(4,0) & -t(4,1) & -t(4,2) & t(4,3) & -t(4,4) # label(non_clause).  [assumption].
11 f(0,ds1) = 3 & f(1,ds1) = 0 & f(2,ds1) = 2 & f(3,ds1) = 0 & f(4,ds1) = 2 # label(non_clause).  [assumption].
12 f(ds1,0) = 1 & f(ds1,1) = 2 & f(ds1,2) = 1 & f(ds1,3) = 1 & f(ds1,4) = 2 # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
ds1 = domain_size + -1.
ds2 = ds1 + -1.
-(x < ds2) | s(x) = x + 1.
s(ds2) = p(ds2).
s(ds1) = ds1.
-(x > 0) | p(x) = x + -1.
p(0) = s(0).
-(x < ds1) | -(y < ds1) | f(x,y) < 2.
-(x < ds1) | -(y < ds1) | f(x,ds1) = f(x,0) + f(x,1) + f(x,2) + f(x,3) + f(x,4).
-(x < ds1) | -(y < ds1) | f(ds1,y) = f(0,y) + f(1,y) + f(2,y) + f(3,y) + f(4,y).
f(ds1,ds1) = 0.
-t(x,y) | f(x,y) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(x,s(y)) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(x,p(y)) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(s(x),y) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(p(x),y) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(p(x),p(y)) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(p(x),s(y)) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(s(x),p(y)) = 0.
-(x < ds1) | -(y < ds1) | f(x,y) != 1 | f(s(x),s(y)) = 0.
-t(0,x).
-t(2,x).
-t(ds1,x).
-t(x,ds1).
t(1,0).
-t(1,1).
t(1,2).
t(1,3).
t(1,4).
-t(3,0).
t(3,1).
-t(3,2).
-t(3,3).
-t(3,4).
t(4,0).
-t(4,1).
-t(4,2).
t(4,3).
-t(4,4).
f(0,ds1) = 3.
f(1,ds1) = 0.
f(2,ds1) = 2.
f(3,ds1) = 0.
f(4,ds1) = 2.
f(ds1,0) = 1.
f(ds1,1) = 2.
f(ds1,2) = 1.
f(ds1,3) = 1.
f(ds1,4) = 2.
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 4.

============================== DOMAIN SIZE 6 =========================

============================== MODEL =================================

interpretation( 6, [number=1, seconds=0], [

        function(ds1, [ 5 ]),

        function(ds2, [ 4 ]),

        function(p(_), [ 1, 0, 1, 2, 3, 4 ]),

        function(s(_), [ 1, 2, 3, 4, 3, 5 ]),

        function(f(_,_), [
			   1, 0, 1, 0, 1, 3,
			   0, 0, 0, 0, 0, 0,
			   0, 1, 0, 1, 0, 2,
			   0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 1, 2,
			   1, 2, 1, 1, 2, 0 ]),

        relation(t(_,_), [
			   0, 0, 0, 0, 0, 0,
			   1, 0, 1, 1, 1, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 1, 0, 0, 0, 0,
			   1, 0, 0, 1, 0, 0,
			   0, 0, 0, 0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=499, kept=498.
Selections=31, assignments=186, propagations=99, current_models=1.
Rewrite_terms=8476, rewrite_bools=2106, indexes=839.
Rules_from_neg_clauses=1, cross_offs=202.

============================== end of statistics =====================

User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 20454 exit (all_models) Thu Jan 21 09:04:56 2021
The process finished Thu Jan 21 09:04:56 2021
