============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 19776 was started by adrian on adrian,
Thu Jan 21 08:38:31 2021
The command was "mace4 -f killersudoku.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file killersudoku.in

assign(domain_size,4).
    % assign(domain_size, 4) -> assign(start_size, 4).
    % assign(domain_size, 4) -> assign(end_size, 4).
assign(max_models,-1).
set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.

formulas(latin_square).
(all x all y1 all y2 (f(x,y1) = f(x,y2) -> y1 = y2)).
(all x1 all x2 all y (f(x1,y) = f(x2,y) -> x1 = x2)).
end_of_list.

formulas(killer_sudoku).
same_color(2,3) & same_color(0,1).
-same_color(0,2).
(all x same_color(x,x)).
(all x all y (same_color(x,y) -> same_color(y,x))).
(all x all y all z (same_color(x,y) & same_color(y,z) -> same_color(x,z))).
(all x1 all y1 all x2 all y2 (same_color(x1,x2) & same_color(y1,y2) & f(x1,y1) = f(x2,y2) & x1 + x2 >= 4 & y1 + y2 < 2 -> x1 = x2 & y1 = y2)).
(all x1 all y1 all x2 all y2 (same_color(x1,x2) & same_color(y1,y2) & f(x1,y1) = f(x2,y2) & x1 + x2 < 2 & y1 + y2 >= 4 -> x1 = x2 & y1 = y2)).
end_of_list.

formulas(sample_puzzle_with_six_cages).
f(0,2) + f(0,3) = 3.
f(0,0) + f(1,0) = 5.
f(0,1) + f(1,1) + f(1,2) = 3.
f(1,3) + f(2,3) + f(2,2) = 3.
f(2,0) + f(2,1) + f(3,0) = 4.
f(3,1) + f(3,2) + f(3,3) = 6.
end_of_list.

list(distinct).
[f(0,2),f(0,3)].
[f(0,0),f(1,0)].
[f(0,1),f(1,1),f(1,2)].
[f(1,3),f(2,3),f(2,2)].
[f(2,0),f(2,1),f(3,0)].
[f(3,1),f(3,2),f(3,3)].
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y1 all y2 (f(x,y1) = f(x,y2) -> y1 = y2)) # label(non_clause).  [assumption].
2 (all x1 all x2 all y (f(x1,y) = f(x2,y) -> x1 = x2)) # label(non_clause).  [assumption].
3 same_color(2,3) & same_color(0,1) # label(non_clause).  [assumption].
4 (all x same_color(x,x)) # label(non_clause).  [assumption].
5 (all x all y (same_color(x,y) -> same_color(y,x))) # label(non_clause).  [assumption].
6 (all x all y all z (same_color(x,y) & same_color(y,z) -> same_color(x,z))) # label(non_clause).  [assumption].
7 (all x1 all y1 all x2 all y2 (same_color(x1,x2) & same_color(y1,y2) & f(x1,y1) = f(x2,y2) & x1 + x2 >= 4 & y1 + y2 < 2 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
8 (all x1 all y1 all x2 all y2 (same_color(x1,x2) & same_color(y1,y2) & f(x1,y1) = f(x2,y2) & x1 + x2 < 2 & y1 + y2 >= 4 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
f(x,y) != f(x,z) | y = z.
f(x,y) != f(z,y) | x = z.
same_color(2,3).
same_color(0,1).
-same_color(0,2).
same_color(x,x).
-same_color(x,y) | same_color(y,x).
-same_color(x,y) | -same_color(y,z) | same_color(x,z).
-same_color(x,y) | -same_color(z,u) | f(y,u) != f(x,z) | -(x + y >= 4) | -(z + u < 2) | y = x.
-same_color(x,y) | -same_color(z,u) | f(y,u) != f(x,z) | -(x + y >= 4) | -(z + u < 2) | u = z.
-same_color(x,y) | -same_color(z,u) | f(y,u) != f(x,z) | -(x + y < 2) | -(z + u >= 4) | y = x.
-same_color(x,y) | -same_color(z,u) | f(y,u) != f(x,z) | -(x + y < 2) | -(z + u >= 4) | u = z.
f(0,2) + f(0,3) = 3.
f(0,0) + f(1,0) = 5.
f(0,1) + f(1,1) + f(1,2) = 3.
f(1,3) + f(2,3) + f(2,2) = 3.
f(2,0) + f(2,1) + f(3,0) = 4.
f(3,1) + f(3,2) + f(3,3) = 6.
f(0,2) != f(0,3).
f(0,0) != f(1,0).
f(0,1) != f(1,1).
f(0,1) != f(1,2).
f(1,1) != f(1,2).
f(1,3) != f(2,3).
f(1,3) != f(2,2).
f(2,3) != f(2,2).
f(2,0) != f(2,1).
f(2,0) != f(3,0).
f(2,1) != f(3,0).
f(3,1) != f(3,2).
f(3,1) != f(3,3).
f(3,2) != f(3,3).
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 6.

============================== DOMAIN SIZE 4 =========================

============================== MODEL =================================

interpretation( 4, [number=1, seconds=0], [

        function(f(_,_), [
			   2, 1, 3, 0,
			   3, 0, 2, 1,
			   1, 3, 0, 2,
			   0, 2, 1, 3 ]),

        relation(same_color(_,_), [
			   1, 1, 0, 0,
			   1, 1, 0, 0,
			   0, 0, 1, 1,
			   0, 0, 1, 1 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=1259, kept=164.
Selections=26, assignments=104, propagations=88, current_models=1.
Rewrite_terms=2360, rewrite_bools=739, indexes=0.
Rules_from_neg_clauses=72, cross_offs=462.

============================== end of statistics =====================

User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 19776 exit (all_models) Thu Jan 21 08:38:31 2021
The process finished Thu Jan 21 08:38:31 2021
